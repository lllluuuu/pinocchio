

ADD_EXECUTABLE(tspatial EXCLUDE_FROM_ALL tspatial.cpp)
PKG_CONFIG_USE_DEPENDENCY(tspatial eigen3)

ADD_EXECUTABLE(symmetric EXCLUDE_FROM_ALL symmetric.cpp)
PKG_CONFIG_USE_DEPENDENCY(symmetric eigen3)
IF(METAPOD_FOUND)
  GET_TARGET_PROPERTY(SYMMETRIC_CFLAGS symmetric COMPILE_FLAGS) 
  SET_PROPERTY(TARGET symmetric 
    PROPERTY COMPILE_FLAGS "${SYMMETRIC_CFLAGS} -DWITH_METAPOD")
ENDIF(METAPOD_FOUND)


ADD_EXECUTABLE(rnea EXCLUDE_FROM_ALL rnea.cpp)
PKG_CONFIG_USE_DEPENDENCY(rnea eigen3)

ADD_EXECUTABLE(crba EXCLUDE_FROM_ALL crba.cpp)
PKG_CONFIG_USE_DEPENDENCY(crba eigen3)

ADD_EXECUTABLE(jacobian EXCLUDE_FROM_ALL jacobian.cpp)
PKG_CONFIG_USE_DEPENDENCY(jacobian eigen3)

ADD_EXECUTABLE(com EXCLUDE_FROM_ALL com.cpp)
PKG_CONFIG_USE_DEPENDENCY(com eigen3)

ADD_EXECUTABLE(cholesky EXCLUDE_FROM_ALL cholesky.cpp)
PKG_CONFIG_USE_DEPENDENCY(cholesky eigen3)

IF(URDFDOM_FOUND)
  ADD_EXECUTABLE(urdf EXCLUDE_FROM_ALL urdf.cpp)
  PKG_CONFIG_USE_DEPENDENCY(urdf eigen3)
  PKG_CONFIG_USE_DEPENDENCY(urdf urdfdom)

  # The following two lines should be simpler with APPEND, but bug on CMake 2.8.7 (U12.04).
  GET_TARGET_PROPERTY(URDF_CFLAGS urdf COMPILE_FLAGS) 
  SET_PROPERTY(TARGET urdf PROPERTY COMPILE_FLAGS "${URDF_CFLAGS} -DPINOCCHIO_SOURCE_DIR=\\\"${${PROJECT_NAME}_SOURCE_DIR}\\\"")
  
  ADD_EXECUTABLE(value EXCLUDE_FROM_ALL value.cpp)
  PKG_CONFIG_USE_DEPENDENCY(value eigenpy)
  PKG_CONFIG_USE_DEPENDENCY(value urdfdom)
  GET_TARGET_PROPERTY(VALUE_CFLAGS value COMPILE_FLAGS) 
  SET_PROPERTY(TARGET value PROPERTY COMPILE_FLAGS "${VALUE_CFLAGS} -DPINOCCHIO_SOURCE_DIR=\\\"${${PROJECT_NAME}_SOURCE_DIR}\\\"")

ENDIF(URDFDOM_FOUND)

# Work in progress

#ADD_EXECUTABLE(constraint EXCLUDE_FROM_ALL constraint.cpp)
#PKG_CONFIG_USE_DEPENDENCY(constraint eigen3)

#ADD_EXECUTABLE(variant EXCLUDE_FROM_ALL variant.cpp)
#PKG_CONFIG_USE_DEPENDENCY(variant eigen3)
